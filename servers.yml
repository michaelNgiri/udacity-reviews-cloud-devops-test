Description: >
  NGIRI MICHAEL / Udacity
  This template deploys a VPC.
Parameters:
    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
    DNSProtocol:
        Description: An DNS protocol that will be prefixed to resources
        Type: String
    NetworkAccessIP:
        Description: Source that has SSH access to the bastion host. (i.e. 50.32.108.38/32)
        Type: String
    BastionHostSSHKeyName:
        Description: Bastion Host SSH Key Name
        Type: String
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SHH for local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-protecting-personal-information/nbn_protecting_20190620_163522_open.zip /var/www/html
          unzip -o nbn_protecting_20190620_163522_open.zip
      ImageId: ami-005bdb005fb00e791
      KeyName: !Sub ${BastionHostSSHKeyName}
      IamInstanceProfile: !Ref IamInstanceProfile
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t3.small
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub "${EnvironmentName}-PRI-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '5'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB 
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 30
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  IamPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: "s3:*"
          Resource: "*"
      Roles:
      - !Ref IamRole
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref IamRole
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Access to Bastion Instance
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Sub ${NetworkAccessIP}
      - IpProtocol: icmp
        FromPort: "-1"
        ToPort: "-1"
        CidrIp: !Sub ${NetworkAccessIP}
      SecurityGroupEgress:
      - IpProtocol: "-1"
        CidrIp: 0.0.0.0/0
  BastionEC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
    - BastionSecurityGroup
    - IamInstanceProfile
    Properties:
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: ami-005bdb005fb00e791
      InstanceType: t3.small
      KeyName: !Sub ${BastionHostSSHKeyName}
      SecurityGroupIds:
      - Ref: BastionSecurityGroup
      - Ref: WebServerSecGroup
      SubnetId: 
        Fn::ImportValue: 
          !Sub "${EnvironmentName}-PUB1-SN"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          cd /home/ubuntu
          aws s3 cp s3://udacity-gurootraining-keys/gurootraining.pem /home/ubuntu
          chmod 400 gurootraining.pem
          warmebs: 'echo ''ACTION: Performing EBS Warming'' && dd if=/dev/xvda of=/dev/xvdaconv=notrunc bs=1M status=progress'
          installpackagelist: 'apt-get update && apt-get install '
          - Ref: AWS::NoValue
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn:
    - BastionEC2Instance
    - EIP
    Properties:
      InstanceId:
        Ref: BastionEC2Instance
      AllocationId:
        Fn::GetAtt:
        - EIP
        - AllocationId

Outputs:
  WebAppLB:
    Description: A reference to the Loadbalancer DNS Name
    Value: 
      !Join
      - ''
      - - !Sub ${DNSProtocol}
        - !GetAtt WebAppLB.DNSName
    Export:
        Name: !Sub ${EnvironmentName}-LOADBALANCER-DNS
  WebAppLB:
    Description: A reference to the Loadbalancer DNS Name
    Value: 
      !Join
      - ''
      - - !Sub ${DNSProtocol}
        - !GetAtt WebAppLB.DNSName
    Export:
        Name: !Sub ${EnvironmentName}-LOADBALANCER-DNS


    
  